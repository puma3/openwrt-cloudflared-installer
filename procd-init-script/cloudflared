#!/bin/sh /etc/rc.common

USE_PROCD=1
START=10
STOP=01

name=cloudflared
pid_file="/var/run/$name.pid"
cmd="/usr/bin/$name tunnel run"
cfd_token_file="~/.cloudflared/token"

# cmd="/usr/bin/$name --pidfile $pid_file  --no-autoupdate tunnel run --token ey"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

[ -e /etc/sysconfig/$name ] && . /etc/sysconfig/$name

get_pid() {
    cat "$pid_file"
}

get_token() {
    cat "$cfd_token_file"
}

is_running() {
    [ -f "$pid_file" ] && ps $(get_pid) > /dev/null 2>&1
}

boot() {
    ubus -t 30 wait_for network.interface network.loopback 2>/dev/null
    rc_procd start_service
}

start_service() {
    if [ $("${cfd_init}" enabled; printf "%u" ${?}) -eq 0 ]
    then
        if is_running; then
            echo "Already started"
        else
            echo "Starting $name"

            procd_open_instance ${name}
            procd_set_param command ${cmd}
            procd_append_param command --no-autoupdate
            procd_append_param command --token ${get_token()}

            procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}

            procd_set_param pidfile ${pid_file}
            procd_set_param term_timeout 60
            procd_set_param stdout ${stdout_log}
            procd_set_param stderr ${stderr_log}
            procd_close_instance
        fi
    fi
}

stop_service() {
    if is_running; then
        echo -n "Stopping $name.."
        kill $(get_pid)
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi
            echo -n "."
            sleep 1
        done
        echo
        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
}
